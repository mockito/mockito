apply plugin: 'osgi'

/* TODO use Gradle osgi plugin at some point */
afterEvaluate {
    tasks.matching { it.name == 'jar' }.all { jar ->
        jar.manifest {
            classpath = project.configurations.runtime

            instruction '-versionpolicy', '[${version;==;${@}},${version;+;${@}})'

            name = 'Mockito Mock Library for Java. Core bundle requires Hamcrest-core and Objenesis.'
            symbolicName = 'org.mockito'
            version = project.version

            instruction 'Export-Package',
                    '!org.mockito.asm.*',
                    '!org.mockito.cglib.*',
                    '!org.mockito.internal.*',
                    'org.objenesis;version=2.1',
                    "org.mockito.*;version=${project.version}"

            instruction 'Import-Package',
                    'junit.*;resolution:=optional',
                    'org.junit.*;resolution:=optional',
                    'org.apache.tools.ant.*;resolution:=optional',
                    'org.hamcrest;version="[1.0,2.0)"',
                    'org.objenesis;version="[2.1,3.0)"',
                    'org.mockito.*'

            instruction 'Private-Package', 'org.mockito.*'

            instruction '-removeheaders', 'Private-Package'
        }
    }

    tasks.matching { it.name == 'allJar' }.all { jar ->
        jar.manifest = osgiManifest {
            classesDir = tasks.jar.manifest.classesDir
            classpath = tasks.jar.manifest.classpath + fileTree('lib/run') { exclude '*.txt' }

            instruction '-versionpolicy', '[${version;==;${@}},${version;+;${@}})'

            name = 'Mockito Mock Library for Java. Hamcrest-core and Objenesis included in the bundle.'
            symbolicName = 'org.mockito.all'
            version = project.version

            instruction 'Export-Package',
                    '!org.mockito.asm.*',
                    '!org.mockito.cglib.*',
                    '!org.mockito.internal.*',
                    'org.hamcrest;version=1.1',
                    'org.hamcrest.core;version=1.1',
                    'org.objenesis;version=2.1',
                    "org.mockito.*;version=${project.version}"

            instruction 'Import-Package',
                    'junit.*;resolution:=optional',
                    'org.junit.*;resolution:=optional',
                    'org.apache.tools.ant.*;resolution:=optional',
                    'org.hamcrest.*;version="[1.0,2.0)"',
                    'org.objenesis.*;version="[2.1,3.0)"',
                    'org.mockito.*',
                    'COM.jrockit.reflect;resolution:=optional',
                    'jrockit.vm;resolution:=optional',
                    'sun.reflect;resolution:=optional',
                    'sun.misc;resolution:=optional'

            instruction 'Private-Package',
                    'org.mockito.*',
                    'org.hamcrest.*,',
                    'org.objenesis.*'

            instruction '-removeheaders', 'Private-Package'
        }
    }
}
