// Top-level build file where you can add configuration options common to all sub-projects/modules.

plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

apply from: "$rootDir/gradle/dependencies.gradle"
apply from: "$rootDir/gradle/test-launcher.gradle"

android {
    namespace = "org.mockitousage.androidtest"
    compileSdk = 33

    defaultConfig {
        minSdk = 26
        targetSdk = 33
        versionCode = 1
        versionName = "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            enableUnitTestCoverage true
            enableAndroidTestCoverage true
        }
    }
    afterEvaluate {
        // Enable coverage of mockito classes which are not part of this module.
        // Without these added classFileCollection dependencies the coverage data/report is empty.
        tasks.createDebugAndroidTestCoverageReport { com.android.build.gradle.internal.coverage.JacocoReportTask task ->
            // Clear the production code of this module: src/main/java, it has no mockito-user-visible code.
            task.classFileCollection.setFrom()
            rootProject.allprojects { Project currentProject ->
                plugins.withId("java") {
                    SourceSetContainer sourceSets = currentProject.sourceSets
                    // Mimic org.gradle.testing.jacoco.tasks.JacocoReportBase.sourceSets().
                    // Not possible to set task.javaSources because it's initialized with setDisallowChanges.
                    //task.javaSources.add({ [ sourceSets.main.allJava.srcDirs ] })
                    task.classFileCollection.from(
                        sourceSets.main.output.asFileTree.matching {
                            exclude("**/internal/util/concurrent/**")
                        }
                    )
                }
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = '11'
    }
}

androidComponents {
    beforeVariants(selector().withBuildType("release")) {
        enable = false
    }
}

dependencies {
    implementation libraries.kotlin.stdlib

    // Add :android on the classpath so that AGP's jacoco setup thinks it's "production code to be tested".
    // Essentially a way to say: tasks.createDebugAndroidTestCoverageReport.classFileCollection.from(project(":android"))
    runtimeOnly project(":android")
    // Exclude :android from JVM tests, because otherwise it clashes with mockito-core/project(":").
    configurations.testImplementation { exclude group: 'org.mockito', module: 'android' }

    testImplementation project(":")
    testImplementation libraries.junit4
    testImplementation libraries.junitJupiterApi
    testImplementation libraries.junitJupiterEngine

    androidTestImplementation libraries.android.runner
    androidTestImplementation libraries.android.junit
    androidTestImplementation project(":android")
}
