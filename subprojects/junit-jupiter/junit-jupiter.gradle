import aQute.bnd.gradle.Resolve

description = "Mockito JUnit 5 support"

apply from: "$rootDir/gradle/java-library.gradle"
apply plugin: 'biz.aQute.bnd.builder'

dependencies {
    api project.rootProject
    implementation libraries.junitJupiterApi
    testImplementation libraries.assertj
    testImplementation libraries.junitPlatformLauncher
    testRuntimeOnly libraries.junitJupiterEngine
}

tasks.withType(Test) {
    useJUnitPlatform()
}

jar {
    classpath = project.configurations.runtimeClasspath
    bundle {
        bnd(
            'Bundle-Name': 'Mockito Extension Library for JUnit 5.',
            'Bundle-SymbolicName': 'org.mockito.junit-jupiter',
            'Bundle-Version': "\${version_cleanup;${project.version}}",
            '-versionpolicy': '[${version;==;${@}},${version;+;${@}})',
            'Export-Package': "org.mockito.junit.jupiter.*;version=${version}",
            '-removeheaders': 'Private-Package',
            'Automatic-Module-Name': 'org.mockito.junit.jupiter',
            '-noextraheaders': 'true',
            '-export-apiguardian': 'org.mockito.internal.*'
        )
    }
}

// Bnd's Resolve task uses a properties file for its configuration. This
// task writes out the properties necessary for it to verify the OSGi
// metadata.
def osgiProperties = tasks.register('osgiProperties', WriteProperties) {
  outputFile = layout.getBuildDirectory().file("verifyOSGiProperties.bndrun")
  property('-standalone', true)
  property('-runee', "JavaSE-${targetCompatibility}")
  property('-runrequires', 'osgi.identity;filter:="(osgi.identity=org.mockito.junit-jupiter)"')
}

// Bnd's Resolve task is what verifies that a jar can be used in OSGi and
// that its metadata is valid. If the metadata is invalid this task will
// fail.
def verifyOSGi = tasks.register('verifyOSGi', Resolve) {
  getBndrun().fileProvider(osgiProperties.map { it.outputFile })
  getOutputBndrun().set(layout.getBuildDirectory().file("resolvedOSGiProperties.bndrun"))
  reportOptional = false
}

tasks.named('check') {
  dependsOn(verifyOSGi)
}
