shipkit {
    gitHub.repository = "mockito/mockito"
    gitHub.readOnlyAuthToken = "a0a4c0f41c200f7c653323014d6a72a127764e17"
    //TODO document why we are using real user name here and for Bintray user, too
    gitHub.writeAuthUser = "szczepiq"
    gitHub.writeAuthToken = System.getenv("GH_WRITE_TOKEN")

#    releaseNotes.file = "doc/release-notes/official.md"
    releaseNotes.labelMapping = [
        '1.* incompatible': 'Incompatible changes with previous major version (v1.x)',
        'java-9': "Java 9 support",
        'java-8': "Java 8 support",
        'new feature': "New features",
        'BDD': 'Behavior-Driven Development support',
        'bug': "Bugfixes",
        'enhancement': "Enhancements",
        'android': "Android support",
        'docs': 'Documentation'
    ]

    git.user = "Mockito Release Tools"
    git.email = "<mockito.release.tools@gmail.com>"
    //git.releasableBranchRegex = "master|release/.+"  // matches 'master', 'release/2.x', 'release/3.x', etc.
    git.releasableBranchRegex = "release/.+"  // 'release/2.x', 'release/3.x', etc.

    def buildNo = System.getenv("TRAVIS_BUILD_NUMBER")
    git.commitMessagePostfix = buildNo? "by CI build $buildNo\n\n[ci skip-release]" : "by local build\n\n[ci skip-release]"

    team.developers = ['szczepiq:Szczepan Faber', 'bric3:Brice Dutheil', 'raphw:Rafael Winterhalter', 'TimvdLippe:Tim van der Lippe']
    team.contributors = []
}

/**
 * Mockito team does not publish to Maven Central every release as requested by the community.
 * We publish to maven central only some versions. All versions are published to Bintray on every change.
 * See https://github.com/mockito/mockito/issues/911
 */
boolean centralRelease = shouldReleaseToCentral(project)

allprojects {
    plugins.withId("org.shipkit.bintray") {
        bintray {
            key = System.getenv("BINTRAY_API_KEY")
            pkg {
                repo = 'maven' //https://bintray.com/mockito/maven
                user = 'szczepiq' //https://bintray.com/szczepiq
                userOrg = 'mockito' //https://bintray.com/mockito
                name = 'mockito' //https://bintray.com/mockito/maven/mockito
                licenses = ['MIT']
                labels = ['mocks', 'tdd', 'unit tests']
                publish = true //can be changed to 'false' for testing

                //See our Bintray packages at https://bintray.com/mockito/maven
                name = centralRelease? "mockito" : "mockito-development"

                version {
                    //Notable versions are automatically synced to Maven Central repository (https://oss.sonatype.org/)
                    mavenCentralSync {
                        sync = centralRelease
                        user = System.env.NEXUS_TOKEN_USER
                        password = System.env.NEXUS_TOKEN_PWD
                    }
                }
            }
        }
    }
}

/**
 * Finds out if we should release to Maven Central.
 * To test this logic, run build with '-i' (info logging) and inspect the build output.
 */
static boolean shouldReleaseToCentral(project) {
    boolean centralReleaseByCommit = System.getenv("TRAVIS_COMMIT_MESSAGE")?.contains("[ci maven-central-release]")
    boolean centralReleaseByProjectProperty = project.hasProperty("maven-central-release")
    boolean centralRelease = centralReleaseByCommit || centralReleaseByProjectProperty
    def message = """Release was using following settings:
 - commit message contains '[ci maven-central-release]': $centralReleaseByCommit
 - project property 'maven-central-release' exists: $centralReleaseByProjectProperty
 - Maven Central release is enabled: $centralRelease"""
    project.logger.info(message)
    project.afterEvaluate {
        project.tasks.performRelease.doLast { logger.lifecycle(message) }
    }
    return centralRelease
}
