task mockitoCoverage(type: JacocoReport) {

    allprojects { currentProject ->
        // These tests do not have a `test` task.
        if (currentProject.name in ['android']) {
            return
        }
        plugins.withId("java") {
            mockitoCoverage.sourceSets currentProject.sourceSets.main

            apply plugin: "jacoco"

            jacoco {
                toolVersion = '0.8.8'

                if (currentProject != rootProject) {   //already automatically enhanced in mockito main project as "java" plugin was applied before
                    applyTo test
                }
                test.jacoco.destinationFile = file("${currentProject.buildDir}/jacoco/test.exec")
            }

            mockitoCoverage.executionData(files(test.jacoco.destinationFile).builtBy(test))

            afterEvaluate {
                classDirectories.setFrom(
                    classDirectories.files.collect {
                        fileTree(
                            dir: it,
                            exclude: ["**/internal/util/concurrent/**"]
                        )
                    }
                )
            }
        }
    }

    reports {
        xml.required = true
        html.required = true
        html.destination file("${buildDir}/jacocoHtml")
    }

    doLast {
        logger.lifecycle "Jacoco HTML created: file://${new File(reports.html.destination, "index.html").toURI().path}"
    }
}

task coverageReport(dependsOn: ["mockitoCoverage"]) {}
